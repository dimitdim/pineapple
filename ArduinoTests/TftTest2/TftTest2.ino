static const uint16_t
Rcmd[] = {0x101,
0x200,
0x111,
0x200,
0x1B1,
0x001,
0x02C,
0x02D,
0x1B2,
0x001,
0x02C,
0x02D,
0x1B3,
0x001,
0x02C,
0x02D,
0x001,
0x02C,
0x02D,
0x1B4,
0x007,
0x1C0,
0x0A2,
0x002,
0x084,
0x1C1,
0x0C5,
0x1C2,
0x00A,
0x000,
0x1C3,
0x08A,
0x02A,
0x1C4,
0x08A,
0x0EE,
0x1C5,
0x00E,
0x120,
0x136,
0x0C8,
0x13A,
0x005,
0x12A,
0x000,
0x000,
0x000,
0x07F,
0x12B,
0x000,
0x000,
0x000,
0x09F,
0x1E0,
0x002,
0x01c,
0x007,
0x012,
0x037,
0x032,
0x029,
0x02d,
0x029,
0x025,
0x02B,
0x039,
0x000,
0x001,
0x003,
0x010,
0x1E1,
0x003,
0x01d,
0x007,
0x006,
0x02E,
0x02C,
0x029,
0x02D,
0x02E,
0x02E,
0x037,
0x03F,
0x000,
0x000,
0x002,
0x010,
0x113,
0x200,
0x129,
0x200,
0x136,
0x0C0,
0x300
},
Scrn[] = {
0x12A,
0x000,
0x000,
0x000,
0x07F,
0x12B,
0x000,
0x000,
0x000,
0x09F,
0x12C,
0x300
},
Kitteh[] = {
0x029,
0x065,
0x029,
0x044,
0x029,
0x045,
0x029,
0x045,
0x031,
0x086,
0x039,
0x0c7,
0x031,
0x086,
0x029,
0x045,
0x029,
0x044,
0x021,
0x003,
0x018,
0x0c2,
0x021,
0x003,
0x018,
0x0c2,
0x018,
0x0e3,
0x018,
0x0e3,
0x018,
0x0e3,
0x018,
0x0e3,
0x018,
0x0e3,
0x020,
0x0e3,
0x010,
0x0a2,
0x020,
0x0e3,
0x020,
0x0e3,
0x020,
0x0e3,
0x021,
0x003,
0x021,
0x003,
0x018,
0x0e3,
0x018,
0x0e3,
0x018,
0x0e3,
0x018,
0x0c2,
0x010,
0x081,
0x018,
0x0c2,
0x021,
0x024,
0x019,
0x003,
0x021,
0x024,
0x029,
0x065,
0x021,
0x003,
0x010,
0x0a2,
0x018,
0x0c3,
0x010,
0x0a2,
0x018,
0x0c3,
0x010,
0x0a2,
0x018,
0x0e2,
0x010,
0x0a2,
0x018,
0x0e3,
0x021,
0x003,
0x018,
0x0c3,
0x029,
0x065,
0x039,
0x0c6,
0x042,
0x028,
0x042,
0x049,
0x03a,
0x008,
0x031,
0x0a6,
0x029,
0x044,
0x018,
0x0e3,
0x021,
0x024,
0x029,
0x044,
0x018,
0x0c2,
0x018,
0x0c2,
0x021,
0x003,
0x029,
0x024,
0x021,
0x003,
0x018,
0x0e3,
0x018,
0x0c2,
0x018,
0x0c2,
0x010,
0x0a2,
0x010,
0x0a2,
0x010,
0x0a1,
0x010,
0x0c2,
0x019,
0x003,
0x018,
0x0c2,
0x010,
0x081,
0x010,
0x0a1,
0x010,
0x082,
0x010,
0x082,
0x018,
0x0c3,
0x010,
0x0a2,
0x010,
0x081,
0x010,
0x0a2,
0x010,
0x0a2,
0x010,
0x0a2,
0x018,
0x082,
0x020,
0x0c3,
0x020,
0x0e3,
0x029,
0x0a3,
0x03a,
0x0a4,
0x03b,
0x045,
0x033,
0x0a5,
0x033,
0x0e6,
0x03c,
0x025,
0x03c,
0x045,
0x03c,
0x084,
0x03c,
0x0a3,
0x034,
0x0a1,
0x034,
0x0a0,
0x03c,
0x0a0,
0x044,
0x0a1,
0x03c,
0x0e1,
0x03c,
0x0e1,
0x034,
0x0c0,
0x034,
0x0e0,
0x035,
0x000,
0x035,
0x000,
0x035,
0x020,
0x02d,
0x000,
0x02d,
0x000,
0x02d,
0x000,
0x02d,
0x000,
0x02d,
0x000,
0x035,
0x000,
0x035,
0x020,
0x03d,
0x040,
0x045,
0x061,
0x045,
0x042,
0x04d,
0x063,
0x04d,
0x064,
0x04d,
0x064,
0x04d,
0x064,
0x04d,
0x064,
0x04d,
0x084,
0x055,
0x084,
0x055,
0x084,
0x055,
0x084,
0x05d,
0x0c4,
0x05d,
0x0c4,
0x05d,
0x0c4,
0x065,
0x0c5,
0x06d,
0x0e6,
0x06e,
0x008,
0x06d,
0x0e7,
0x076,
0x007,
0x076,
0x027,
0x07e,
0x048,
0x07e,
0x068,
0x07e,
0x068,
0x07e,
0x088,
0x086,
0x088,
0x086,
0x0a9,
0x07e,
0x089,
0x07e,
0x089,
0x07e,
0x089,
0x07e,
0x069,
0x07e,
0x049,
0x076,
0x049,
0x076,
0x008,
0x06e,
0x007,
0x06d,
0x0e6,
0x06d,
0x0e5,
0x05d,
0x0e4,
0x056,
0x004,
0x055,
0x0e4,
0x05d,
0x0a5,
0x05d,
0x084,
0x055,
0x064,
0x04d,
0x044,
0x04c,
0x0c2,
0x044,
0x0a1,
0x044,
0x0a1,
0x034,
0x080,
0x03c,
0x081,
0x03c,
0x000,
0x029,
0x045,
0x021,
0x024,
0x031,
0x0a6,
0x021,
0x004,
0x029,
0x045,
0x039,
0x0c7,
0x031,
0x066,
0x021,
0x004,
0x020,
0x0e3,
0x020,
0x0e3,
0x010,
0x0a2,
0x018,
0x0e3,
0x018,
0x0c2,
0x018,
0x0c2,
0x010,
0x0a2,
0x010,
0x0a2,
0x010,
0x0a2,
0x010,
0x082,
0x020,
0x0e3,
0x010,
0x081,
0x008,
0x041,
0x018,
0x0a2,
0x010,
0x081,
0x018,
0x0c3,
0x020,
0x0e3,
0x020,
0x0e4,
0x010,
0x082,
0x008,
0x061,
0x008,
0x061,
0x010,
0x081,
0x010,
0x081,
0x021,
0x003,
0x010,
0x0a2,
0x019,
0x003,
0x021,
0x003,
0x018,
0x0e3,
0x010,
0x0a2,
0x008,
0x061,
0x008,
0x061,
0x000,
0x020,
0x008,
0x081,
0x000,
0x040,
0x008,
0x061,
0x010,
0x081,
0x010,
0x0a1,
0x018,
0x0e3,
0x018,
0x0c2,
0x029,
0x045,
0x03a,
0x008,
0x039,
0x0e8,
0x031,
0x086,
0x031,
0x086,
0x021,
0x004,
0x021,
0x003,
0x010,
0x081,
0x021,
0x003,
0x018,
0x0c2,
0x018,
0x0c2,
0x018,
0x0c2,
0x018,
0x0c2,
0x021,
0x003,
0x010,
0x0a2,
0x000,
0x020,
0x008,
0x040,
0x008,
0x040,
0x008,
0x040,
0x000,
0x020,
0x008,
0x040,
0x010,
0x0a1,
0x010,
0x081,
0x008,
0x040,
0x008,
0x040,
0x000,
0x000,
0x000,
0x020,
0x008,
0x061,
0x000,
0x041,
0x000,
0x020,
0x008,
0x041,
0x000,
0x040,
0x000,
0x020,
0x008,
0x040,
0x008,
0x041,
0x010,
0x081,
0x019,
0x041,
0x032,
0x063,
0x04b,
0x0c6,
0x044,
0x046,
0x044,
0x086,
0x03c,
0x0a5,
0x044,
0x0c5,
0x044,
0x0e4,
0x045,
0x023,
0x045,
0x042,
0x04d,
0x061,
0x055,
0x062,
0x055,
0x083,
0x055,
0x0c2,
0x055,
0x0c2,
0x04d,
0x0a2,
0x04d,
0x0c2,
0x04d,
0x0c2,
0x04d,
0x0c2,
0x04d,
0x0e2,
0x045,
0x0c1,
0x045,
0x0e1,
0x045,
0x0e1,
0x045,
0x0c1,
0x045,
0x0c1,
0x04d,
0x0e1,
0x056,
0x002,
0x05e,
0x023,
0x066,
0x044,
0x066,
0x046,
0x06e,
0x067,
0x06e,
0x088,
0x06e,
0x068,
0x06e,
0x068,
0x06e,
0x068,
0x06e,
0x088,
0x076,
0x088,
0x076,
0x0a9,
0x076,
0x0a9,
0x07e,
0x0c8,
0x076,
0x0a7,
0x07e,
0x0a7,
0x086,
0x0c9,
0x08e,
0x0ea,
0x097,
0x02c,
0x097,
0x04c,
0x097,
0x04c,
0x09f,
0x06c,
0x09f,
0x08c,
0x09f,
0x0ac,
0x0a7,
0x0ac,
0x0a7,
0x0cd,
0x0a7,
0x0cd,
0x0a7,
0x0ed,
0x0a7,
0x0ee,
0x0a7,
0x0ee,
0x0a7,
0x0ce,
0x0a7,
0x0ce,
0x0a7,
0x0ae,
0x0a7,
0x0ae,
0x09f,
0x08e,
0x097,
0x08d,
0x097,
0x04c,
0x097,
0x06b,
0x087,
0x02a,
0x087,
0x04a,
0x087,
0x02a,
0x08f,
0x00a,
0x086,
0x0ca,
0x076,
0x088,
0x066,
0x047,
0x065,
0x0e6,
0x05d,
0x0a4,
0x04d,
0x043,
0x045,
0x022,
0x04d,
0x003,
0x044,
0x061,
0x029,
0x065,
0x029,
0x065,
0x052,
0x08a,
0x029,
0x045,
0x031,
0x086,
0x031,
0x086,
0x029,
0x045,
0x029,
0x025,
0x020,
0x0e4,
0x021,
0x004,
0x008,
0x061,
0x010,
0x0a2,
0x010,
0x081,
0x018,
0x0a2,
0x021,
0x024,
0x018,
0x0e3,
0x018,
0x0c3,
0x018,
0x0c3,
0x021,
0x003,
0x018,
0x0c3,
0x018,
0x0c3,
0x018,
0x0a2,
0x008,
0x041,
0x018,
0x0a2,
0x018,
0x0c3,
0x020,
0x0e3,
0x010,
0x0a2,
0x010,
0x082,
0x010,
0x082,
0x008,
0x040,
0x010,
0x0a2,
0x021,
0x024,
0x008,
0x040,
0x010,
0x0a1,
0x010,
0x082,
0x018,
0x0c3,
0x010,
0x0a2,
0x008,
0x061,
0x010,
0x082,
0x008,
0x061,
0x008,
0x061,
0x008,
0x040,
0x008,
0x061,
0x018,
0x0e3,
0x018,
0x0c2,
0x010,
0x0a2,
0x021,
0x024,
0x029,
0x045,
0x039,
0x0e7,
0x039,
0x0e8,
0x039,
0x0e8,
0x031,
0x0c6,
0x031,
0x085,
0x018,
0x0c2,
0x018,
0x0c2,
0x008,
0x061,
0x018,
0x0c2,
0x021,
0x023,
0x018,
0x0c2,
0x010,
0x0a2,
0x010,
0x081,
0x018,
0x0c2,
0x008,
0x040,
0x008,
0x040,
0x008,
0x061,
0x008,
0x060,
0x000,
0x040,
0x008,
0x060,
0x010,
0x0a2,
0x010,
0x0a2,
0x008,
0x061,
0x008,
0x061,
0x000,
0x020,
0x000,
0x040,
0x008,
0x081,
0x008,
0x040,
0x000,
0x040,
0x008,
0x081,
0x008,
0x040,
0x000,
0x040,
0x010,
0x080,
0x010,
0x0a1,
0x010,
0x0e1,
0x019,
0x021,
0x02a,
0x002,
0x043,
0x084,
0x03c,
0x024,
0x03c,
0x084,
0x03c,
0x0c3,
0x03c,
0x0c3,
0x045,
0x002,
0x045,
0x042,
0x045,
0x081,
0x04d,
0x0a1,
0x055,
0x0c2,
0x055,
0x0c2,
0x04d,
0x0c0,
0x04d,
0x0c0,
0x04d,
0x0c0,
0x04d,
0x0e0,
0x04d,
0x0e0,
0x04d,
0x0e0,
0x04e,
0x001,
0x04e,
0x000,
0x045,
0x0e0,
0x045,
0x0e0,
0x045,
0x0e0,
0x04d,
0x0e1,
0x04e,
0x001,
0x056,
0x022,
0x066,
0x063,
0x066,
0x084,
0x06e,
0x066,
0x06e,
0x087,
0x076,
0x0a8,
0x076,
0x088,
0x076,
0x088,
0x06e,
0x088,
0x06e,
0x087,
0x06e,
0x087,
0x076,
0x0a8,
0x076,
0x0a8,
0x076,
0x0a7,
0x076,
0x086,
0x076,
0x086,
0x07e,
0x0a8,
0x086,
0x0ca,
0x08e,
0x0eb,
0x08f,
0x02b,
0x08f,
0x04b,
0x097,
0x04b,
0x097,
0x04a,
0x097,
0x06b,
0x097,
0x08b,
0x09f,
0x0ab,
0x097,
0x0ab,
0x097,
0x0ab,
0x09f,
0x0ac,
0x09f,
0x0cc,
0x09f,
0x0ad,
0x09f,
0x0ad,
0x09f,
0x0ae,
0x09f,
0x0ae,
0x09f,
0x08e,
0x097,
0x0ad,
0x09f,
0x0ad,
0x097,
0x08d,
0x097,
0x06c,
0x097,
0x08c,
0x08f,
0x04b,
0x08f,
0x02b,
0x08f,
0x02b,
0x07e,
0x0ea,
0x06e,
0x088,
0x066,
0x067,
0x056,
0x005,
0x045,
0x063,
0x045,
0x002,
0x04d,
0x003,
0x03c,
0x041,
0x031,
0x0a6,
0x031,
0x0a6,
0x052,
0x08a,
0x042,
0x008,
0x039,
0x0c7,
0x042,
0x008,
0x031,
0x0a6,
0x031,
0x086,
0x021,
0x024,
0x021,
0x024,
0x018,
0x0e3,
0x010,
0x0a2,
0x010,
0x0a2,
0x008,
0x061,
0x018,
0x0e3,
0x021,
0x003,
0x021,
0x024,
0x018,
0x0e3,
0x021,
0x004,
0x018,
0x0c3,
0x031,
0x085,
0x029,
0x045,
0x018,
0x0a2,
0x010,
0x082,
0x010,
0x082,
0x010,
0x0a2,
0x010,
0x0a3,
0x010,
0x0a2,
0x010,
0x082,
0x008,
0x041,
0x018,
0x0c3,
0x029,
0x045,
0x010,
0x0a1,
0x010,
0x081,
0x010,
0x082,
0x010,
0x082,
0x010,
0x081,
0x008,
0x061,
0x008,
0x041,
0x008,
0x040,
0x000,
0x020,
0x008,
0x060,
0x010,
0x0a2,
0x010,
0x0a2,
0x019,
0x003,
0x018,
0x0e3,
0x029,
0x045,
0x039,
0x0c7,
0x042,
0x049,
0x04a,
0x06a,
0x039,
0x0e7,
0x031,
0x086,
0x029,
0x065,
0x031,
0x085,
0x010,
0x081,
0x018,
0x0c2,
0x018,
0x0c2,
0x021,
0x003,
0x029,
0x044,
0x008,
0x061,
0x000,
0x000,
0x008,
0x061,
0x018,
0x0c2,
0x008,
0x040,
0x000,
0x020,
0x008,
0x040,
0x000,
0x040,
0x008,
0x040,
0x008,
0x061,
0x008,
0x061,
0x008,
0x060,
0x008,
0x061,
0x000,
0x040,
0x000,
0x020,
0x008,
0x061,
0x000,
0x020,
0x000,
0x020,
0x008,
0x061,
0x000,
0x040,
0x008,
0x040,
0x008,
0x080,
0x008,
0x0a1,
0x010,
0x0c2,
0x010,
0x0e1,
0x021,
0x082,
0x032,
0x0e3,
0x033,
0x0e3,
0x034,
0x0a2,
0x034,
0x0c2,
0x03d,
0x002,
0x03d,
0x041,
0x045,
0x060,
0x045,
0x0a0,
0x04d,
0x0c1,
0x04d,
0x0e1,
0x04d,
0x0e1,
0x045,
0x0e0,
0x04d,
0x0e0,
0x045,
0x0e0,
0x045,
0x0e0,
0x045,
0x0e0,
0x045,
0x0e0,
0x04e,
0x000,
0x04e,
0x000,
0x046,
0x000,
0x04e,
0x000,
0x04e,
0x001,
0x056,
0x022,
0x056,
0x043,
0x05e,
0x043,
0x066,
0x064,
0x06e,
0x0a5,
0x076,
0x0a7,
0x076,
0x0c8,
0x07e,
0x0e9,
0x07e,
0x0c9,
0x076,
0x0c8,
0x076,
0x0a7,
0x06e,
0x087,
0x06e,
0x087,
0x076,
0x0a7,
0x076,
0x0a7,
0x076,
0x0c7,
0x076,
0x0a6,
0x076,
0x0a6,
0x07e,
0x0c8,
0x086,
0x0e9,
0x08e,
0x0eb,
0x08f,
0x04a,
0x08f,
0x04a,
0x08f,
0x06a,
0x097,
0x06a,
0x097,
0x06a,
0x097,
0x06a,
0x08f,
0x06a,
0x08f,
0x06a,
0x08f,
0x08a,
0x08f,
0x08a,
0x08f,
0x08b,
0x097,
0x08b,
0x097,
0x08c,
0x09f,
0x0ad,
0x09f,
0x0ae,
0x09f,
0x0ae,
0x09f,
0x0cf,
0x097,
0x0ae,
0x09f,
0x0af,
0x0a7,
0x0cf,
0x0a7,
0x0ce,
0x09f,
0x08d,
0x09f,
0x0ae,
0x08f,
0x04c,
0x087,
0x04b,
0x076,
0x0e9,
0x06e,
0x0a8,
0x05e,
0x047,
0x04d,
0x084,
0x045,
0x002,
0x03c,
0x0e3,
0x02c,
0x041,
0x039,
0x0e7,
0x042,
0x008,
0x039,
0x0e8,
0x039,
0x0c7,
0x031,
0x087,
0x039,
0x0c7,
0x031,
0x0a7,
0x042,
0x008,
0x031,
0x0a6,
0x039,
0x0c6,
0x042,
0x007,
0x020,
0x0e3,
0x018,
0x0e3,
0x021,
0x003,
0x018,
0x0c3,
0x018,
0x0c3,
0x031,
0x086,
0x021,
0x024,
0x039,
0x0e7,
0x018,
0x0e3,
0x031,
0x065,
0x031,
0x065,
0x018,
0x0c3,
0x010,
0x062,
0x010,
0x0a2,
0x018,
0x0e3,
0x018,
0x0c3,
0x010,
0x0a2,
0x010,
0x082,
0x010,
0x0a2,
0x010,
0x082,
0x031,
0x085,
0x018,
0x0c2,
0x010,
0x0a1,
0x010,
0x0c2,
0x010,
0x082,
0x010,
0x082,
0x010,
0x0a2,
0x008,
0x061,
0x008,
0x061,
0x008,
0x061,
0x000,
0x040,
0x010,
0x081,
0x010,
0x0a1,
0x018,
0x0c2,
0x031,
0x0a6,
0x031,
0x085,
0x031,
0x086,
0x042,
0x008,
0x042,
0x028,
0x042,
0x008,
0x029,
0x065,
0x021,
0x004,
0x018,
0x0c2,
0x010,
0x081,
0x029,
0x044,
0x021,
0x003,
0x018,
0x0e2,
0x029,
0x044,
0x018,
0x0c2,
0x008,
0x040,
0x008,
0x040,
0x018,
0x0c2,
0x008,
0x040,
0x000,
0x020,
0x008,
0x040,
0x008,
0x040,
0x000,
0x040,
0x008,
0x040,
0x008,
0x060,
0x008,
0x061,
0x008,
0x061,
0x000,
0x040,
0x000,
0x020,
0x008,
0x040,
0x000,
0x020,
0x000,
0x020,
0x008,
0x060,
0x000,
0x040,
0x008,
0x081,
0x010,
0x0c1,
0x008,
0x0c1,
0x008,
0x0a2,
0x010,
0x0a3,
0x019,
0x023,
0x022,
0x002,
0x033,
0x082,
0x034,
0x082,
0x034,
0x0e2,
0x035,
0x022,
0x045,
0x061,
0x045,
0x0a0,
0x045,
0x0c0,
0x04d,
0x0c1,
0x04d,
0x0e1,
0x046,
0x000,
0x046,
0x000,
0x046,
0x000,
0x046,
0x000,
0x045,
0x0e0,
0x045,
0x0e0,
0x04e,
0x000,
0x04e,
0x001,
0x04e,
0x001,
0x056,
0x022,
0x056,
0x043,
0x05e,
0x064,
0x066,
0x084,
0x066,
0x085,
0x06e,
0x086,
0x06e,
0x0a6,
0x076,
0x0a7,
0x07e,
0x0c8,
0x07f,
0x009,
0x087,
0x02a,
0x07f,
0x009,
0x07e,
0x0e9,
0x076,
0x0a7,
0x06e,
0x087,
0x06e,
0x087,
0x076,
0x0a7,
0x076,
0x0a6,
0x076,
0x0a6,
0x06e,
0x085,
0x076,
0x085,
0x07e,
0x0c7,
0x086,
0x0e9,
0x087,
0x00b,
0x08f,
0x04a,
0x08f,
0x06a,
0x097,
0x06b,
0x097,
0x06a,
0x08f,
0x06a,
0x08f,
0x049,
0x08f,
0x049,
0x087,
0x049,
0x087,
0x048,
0x087,
0x049,
0x087,
0x049,
0x08f,
0x06a,
0x08f,
0x06c,
0x097,
0x08d,
0x09f,
0x0ae,
0x09f,
0x0af,
0x0a7,
0x0b0,
0x0a7,
0x0b0,
0x0a7,
0x0d1,
0x0af,
0x0d0,
0x0af,
0x0f0,
0x0af,
0x0d0,
0x0a7,
0x0d0,
0x09f,
0x0af,
0x097,
0x06d,
0x087,
0x00b,
0x076,
0x0ca,
0x066,
0x027,
0x04d,
0x085,
0x03d,
0x003,
0x034,
0x0a2,
0x024,
0x021,
0x300
};

void setup(void) {
  pinMode(8,OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(10,OUTPUT);
  pinMode(11 , OUTPUT);
  pinMode(13, OUTPUT);
  digitalWrite(13,LOW);
  digitalWrite(11,LOW);
  digitalWrite(10,LOW);
  digitalWrite(9, HIGH);
  delay(500);
  digitalWrite(9, LOW);
  delay(500);
  digitalWrite(9, HIGH);
  commandList(Rcmd);
  commandList(Scrn);
  
}

void loop() {
  //fillRect(0x07FF);
  //fillRect(0xF800);
  //fillRect(0x0000);
}

void fillRect(uint16_t color) {
  uint8_t hi = color >> 8, lo = color;
  uint16_t y,x;
  commandList(Scrn);
  digitalWrite(8,HIGH);
  for(y=160; y>0; y--) {
    for(x=128; x>0; x--) {
      spiwrite(hi);
      spiwrite(lo);
    }
  }
}

void spiwrite(uint8_t c) {
  for(uint8_t bit = 0x80; bit; bit >>= 1) {
    if(c & bit) digitalWrite(11,HIGH);
    else        digitalWrite(11,LOW);
    digitalWrite(13, HIGH);
    digitalWrite(13, LOW);
  }
}

void commandList(const uint16_t *list) {
  uint16_t kiwi;
  uint16_t i=0;
  boolean mango=1;
  while(mango) {
    kiwi = list[i++];
    Serial.println(kiwi,HEX);
    if(kiwi<0x100) {digitalWrite(8,HIGH); spiwrite(kiwi);}
    else if(kiwi<0x200) {digitalWrite(8,LOW); spiwrite(kiwi);}
    else if(kiwi<0x300) delay(500);
    else mango=0;
  }
}
